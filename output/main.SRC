; .\output\main.SRC generated from: main.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE main.c DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBOLS PRINT(.\list\main.lst) SRC(.\output\main.SRC)

$NOMOD51

NAME	MAIN

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
EA	BIT	0A8H.7
IE	DATA	0A8H
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
WR	BIT	0B0H.6
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
TF1	BIT	088H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
REN	BIT	098H.4
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
PSW	DATA	0D0H
?PR?main?MAIN        SEGMENT CODE 
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	main
; #include <Def_INC.h>
; #include <Test.h>
; 
; //#define Time0_support
; 
; #ifdef Time0_support
; #define PERIOD     -250
; #endif
; /*
; enum ALERT_BUTTON_TYPE
; {
;   ALERT_BTN_OK,
;   ALERT_BTN_CANCEL,
;   MAX_ALERT_BTN_NUM
; };
; */
; /*
; struct Clock_Show
; {
;   BYTE Hour;
;   BYTE Min;
;   BYTE Sec;
;   
; }Clock_Show;
; BYTE Clock_Show;
; */
; 
; //BYTE SEC_timer_0;
; 
; void main(void)

	RSEG  ?PR?main?MAIN
main:
			; SOURCE LINE # 30
; {
			; SOURCE LINE # 31
; #ifdef Time0_support
; TH0 = (unsigned char) PERIOD;          // set timer period
; TL0 = (unsigned char) PERIOD;
; TMOD = TMOD | 0x02;                    // select mode 2
; TR0 = 1;                               // start timer 0
; ET0 = 1;                               // enable timer 0 interrupt
; EA  = 1;                               // global interrupt enable
; #endif
; SCON  = 0x50;               // SCON: mode 1, 8-bit UART, enable rcvr
			; SOURCE LINE # 40
	MOV  	SCON,#050H
; TMOD |= 0x20;               // TMOD: timer 1, mode 2, 8-bit reload
			; SOURCE LINE # 41
	ORL  	TMOD,#020H
; TH1   = 221;                // TH1:  reload value for 1200 baud @ 16MHz
			; SOURCE LINE # 42
	MOV  	TH1,#0DDH
; TR1   = 1;                  // TR1:  timer 1 run
			; SOURCE LINE # 43
	SETB 	TR1
; TI    = 1;                  // TI:   set TI to send first char of UART
			; SOURCE LINE # 44
	SETB 	TI
; 
; //	AUTO_COLOR_TEST();
; // getchar();
; 
; //	try_test();
; //	Test_Char_Key();
; /*
; #pragma asm
; 
; #pragma endasm
; */
; }
			; SOURCE LINE # 56
	RET  	
; END OF main

	END
